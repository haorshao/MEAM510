
Motor drive.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000112  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .comment      00000030  00000000  00000000  00000166  2**0
                  CONTENTS, READONLY
  2 .debug_aranges 00000020  00000000  00000000  00000196  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   00000087  00000000  00000000  000001b6  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 00000053  00000000  00000000  0000023d  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   000000bd  00000000  00000000  00000290  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000024  00000000  00000000  00000350  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    00000127  00000000  00000000  00000374  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_ranges 00000010  00000000  00000000  0000049b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 56 00 	jmp	0xac	; 0xac <__ctors_end>
   4:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
   8:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
   c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  10:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  14:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  18:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  1c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  20:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  24:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  28:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  2c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  30:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  34:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  38:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  3c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  40:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  44:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  48:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  4c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  50:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  54:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  58:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  5c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  60:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  64:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  68:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  6c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  70:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  74:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  78:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  7c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  80:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  84:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  88:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  8c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  90:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  94:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  98:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  9c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  a0:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  a4:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  a8:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>

000000ac <__ctors_end>:
  ac:	11 24       	eor	r1, r1
  ae:	1f be       	out	0x3f, r1	; 63
  b0:	cf ef       	ldi	r28, 0xFF	; 255
  b2:	da e0       	ldi	r29, 0x0A	; 10
  b4:	de bf       	out	0x3e, r29	; 62
  b6:	cd bf       	out	0x3d, r28	; 61
  b8:	0e 94 62 00 	call	0xc4	; 0xc4 <main>
  bc:	0c 94 87 00 	jmp	0x10e	; 0x10e <_exit>

000000c0 <__bad_interrupt>:
  c0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000c4 <main>:
#include <avr/io.h>
#include "m_general.h"

int main(void)
{
	m_clockdivide(0);
  c4:	e1 e6       	ldi	r30, 0x61	; 97
  c6:	f0 e0       	ldi	r31, 0x00	; 0
  c8:	80 e8       	ldi	r24, 0x80	; 128
  ca:	80 83       	st	Z, r24
  cc:	10 82       	st	Z, r1
	clear(TCCR0B,CS02);
  ce:	85 b5       	in	r24, 0x25	; 37
  d0:	8b 7f       	andi	r24, 0xFB	; 251
  d2:	85 bd       	out	0x25, r24	; 37
    clear(TCCR0B,CS01);
  d4:	85 b5       	in	r24, 0x25	; 37
  d6:	8d 7f       	andi	r24, 0xFD	; 253
  d8:	85 bd       	out	0x25, r24	; 37
	set(TCCR0B,CS00);
  da:	85 b5       	in	r24, 0x25	; 37
  dc:	81 60       	ori	r24, 0x01	; 1
  de:	85 bd       	out	0x25, r24	; 37
	
	set(TCCR0B,WGM02);
  e0:	85 b5       	in	r24, 0x25	; 37
  e2:	88 60       	ori	r24, 0x08	; 8
  e4:	85 bd       	out	0x25, r24	; 37
	set(TCCR0A,WGM01);
  e6:	84 b5       	in	r24, 0x24	; 36
  e8:	82 60       	ori	r24, 0x02	; 2
  ea:	84 bd       	out	0x24, r24	; 36
	set(TCCR0A,WGM00);
  ec:	84 b5       	in	r24, 0x24	; 36
  ee:	81 60       	ori	r24, 0x01	; 1
  f0:	84 bd       	out	0x24, r24	; 36
	
	set(TCCR0A,COM0B1);
  f2:	84 b5       	in	r24, 0x24	; 36
  f4:	80 62       	ori	r24, 0x20	; 32
  f6:	84 bd       	out	0x24, r24	; 36
	clear(TCCR0A,COM0B0);
  f8:	84 b5       	in	r24, 0x24	; 36
  fa:	8f 7e       	andi	r24, 0xEF	; 239
  fc:	84 bd       	out	0x24, r24	; 36
	
	OCR0A=250;
  fe:	8a ef       	ldi	r24, 0xFA	; 250
 100:	87 bd       	out	0x27, r24	; 39
	
	OCR0B=125;
 102:	8d e7       	ldi	r24, 0x7D	; 125
 104:	88 bd       	out	0x28, r24	; 40
	
	set(DDRD,0);
 106:	50 9a       	sbi	0x0a, 0	; 10
	
	
	
    while(1)
    {
		m_green(ON);
 108:	6a 9a       	sbi	0x0d, 2	; 13
 10a:	72 98       	cbi	0x0e, 2	; 14
 10c:	fd cf       	rjmp	.-6      	; 0x108 <main+0x44>

0000010e <_exit>:
 10e:	f8 94       	cli

00000110 <__stop_program>:
 110:	ff cf       	rjmp	.-2      	; 0x110 <__stop_program>
