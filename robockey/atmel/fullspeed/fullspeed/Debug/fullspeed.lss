
fullspeed.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000150  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .comment      00000030  00000000  00000000  000001a4  2**0
                  CONTENTS, READONLY
  2 .debug_aranges 00000028  00000000  00000000  000001d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   000000b2  00000000  00000000  000001fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 00000076  00000000  00000000  000002ae  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   000000d3  00000000  00000000  00000324  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000034  00000000  00000000  000003f8  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    0000013e  00000000  00000000  0000042c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_ranges 00000018  00000000  00000000  0000056a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 56 00 	jmp	0xac	; 0xac <__ctors_end>
   4:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
   8:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
   c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  10:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  14:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  18:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  1c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  20:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  24:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  28:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  2c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  30:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  34:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  38:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  3c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  40:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  44:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  48:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  4c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  50:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  54:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  58:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  5c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  60:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  64:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  68:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  6c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  70:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  74:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  78:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  7c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  80:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  84:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  88:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  8c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  90:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  94:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  98:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  9c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  a0:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  a4:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  a8:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>

000000ac <__ctors_end>:
  ac:	11 24       	eor	r1, r1
  ae:	1f be       	out	0x3f, r1	; 63
  b0:	cf ef       	ldi	r28, 0xFF	; 255
  b2:	da e0       	ldi	r29, 0x0A	; 10
  b4:	de bf       	out	0x3e, r29	; 62
  b6:	cd bf       	out	0x3d, r28	; 61
  b8:	0e 94 9e 00 	call	0x13c	; 0x13c <main>
  bc:	0c 94 a6 00 	jmp	0x14c	; 0x14c <_exit>

000000c0 <__bad_interrupt>:
  c0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000c4 <init_timer>:
	while(1);
}

void init_timer(void){
	// Direction pin B0 for motor 1, B1 for motor 2
	set(DDRB, 0);
  c4:	20 9a       	sbi	0x04, 0	; 4
	set(PORTB, 0);
  c6:	28 9a       	sbi	0x05, 0	; 5
	
	set(DDRB, 1);
  c8:	21 9a       	sbi	0x04, 1	; 4
	set(PORTB, 1);
  ca:	29 9a       	sbi	0x05, 1	; 5
	
	// Initialize timer 1
	OCR1A = 250;
  cc:	8a ef       	ldi	r24, 0xFA	; 250
  ce:	90 e0       	ldi	r25, 0x00	; 0
  d0:	90 93 89 00 	sts	0x0089, r25
  d4:	80 93 88 00 	sts	0x0088, r24
	OCR1B = 245;
  d8:	85 ef       	ldi	r24, 0xF5	; 245
  da:	90 e0       	ldi	r25, 0x00	; 0
  dc:	90 93 8b 00 	sts	0x008B, r25
  e0:	80 93 8a 00 	sts	0x008A, r24
	OCR1C = 245;
  e4:	90 93 8d 00 	sts	0x008D, r25
  e8:	80 93 8c 00 	sts	0x008C, r24
	
	// Set timer 1 modes as up to OCR1A, PWM mode (mode 15)
	set(TCCR1B, WGM13);
  ec:	a1 e8       	ldi	r26, 0x81	; 129
  ee:	b0 e0       	ldi	r27, 0x00	; 0
  f0:	8c 91       	ld	r24, X
  f2:	80 61       	ori	r24, 0x10	; 16
  f4:	8c 93       	st	X, r24
	set(TCCR1B, WGM12);
  f6:	8c 91       	ld	r24, X
  f8:	88 60       	ori	r24, 0x08	; 8
  fa:	8c 93       	st	X, r24
	set(TCCR1A, WGM11);
  fc:	e0 e8       	ldi	r30, 0x80	; 128
  fe:	f0 e0       	ldi	r31, 0x00	; 0
 100:	80 81       	ld	r24, Z
 102:	82 60       	ori	r24, 0x02	; 2
 104:	80 83       	st	Z, r24
	set(TCCR1A, WGM10);
 106:	80 81       	ld	r24, Z
 108:	81 60       	ori	r24, 0x01	; 1
 10a:	80 83       	st	Z, r24

	// Set to clear at OCR1B, set at OCR1A
	set(TCCR1A, COM1B1);
 10c:	80 81       	ld	r24, Z
 10e:	80 62       	ori	r24, 0x20	; 32
 110:	80 83       	st	Z, r24
	clear(TCCR1A, COM1B0);
 112:	80 81       	ld	r24, Z
 114:	8f 7e       	andi	r24, 0xEF	; 239
 116:	80 83       	st	Z, r24
	
	// Set to clear at OCR1C, set at OCR1A
	set(TCCR1A, COM1C1);
 118:	80 81       	ld	r24, Z
 11a:	88 60       	ori	r24, 0x08	; 8
 11c:	80 83       	st	Z, r24
	clear(TCCR1A, COM1C0);
 11e:	80 81       	ld	r24, Z
 120:	8b 7f       	andi	r24, 0xFB	; 251
 122:	80 83       	st	Z, r24

	// Set B6, B7 output
	set(DDRB, 6);
 124:	26 9a       	sbi	0x04, 6	; 4
	set(DDRB, 7);
 126:	27 9a       	sbi	0x04, 7	; 4
	
	// Turn off timer first
	clear(TCCR1B, CS12);
 128:	8c 91       	ld	r24, X
 12a:	8b 7f       	andi	r24, 0xFB	; 251
 12c:	8c 93       	st	X, r24
	clear(TCCR1B, CS11);
 12e:	8c 91       	ld	r24, X
 130:	8d 7f       	andi	r24, 0xFD	; 253
 132:	8c 93       	st	X, r24
	set(TCCR1B, CS10);
 134:	8c 91       	ld	r24, X
 136:	81 60       	ori	r24, 0x01	; 1
 138:	8c 93       	st	X, r24
 13a:	08 95       	ret

0000013c <main>:

void init_timer(void);

int main(void)
{
	m_clockdivide(0);
 13c:	e1 e6       	ldi	r30, 0x61	; 97
 13e:	f0 e0       	ldi	r31, 0x00	; 0
 140:	80 e8       	ldi	r24, 0x80	; 128
 142:	80 83       	st	Z, r24
 144:	10 82       	st	Z, r1
	
	
	init_timer();
 146:	0e 94 62 00 	call	0xc4	; 0xc4 <init_timer>
 14a:	ff cf       	rjmp	.-2      	; 0x14a <main+0xe>

0000014c <_exit>:
 14c:	f8 94       	cli

0000014e <__stop_program>:
 14e:	ff cf       	rjmp	.-2      	; 0x14e <__stop_program>
